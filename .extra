alias vi='vim'
alias tmux="TERM=screen-256color-bce tmux"
export EDITOR="VIM"

# fixing some nice coloring of files
export TERM=xterm-256color        # for common 256 color terminals (e.g. gnome-terminal)
export TERM=screen-256color       # for a tmux -2 session (also for screen)
# put the .dir_colors in the same folder as the .extra file
#if [ `uname` != 'Darwin' ]; then
#	eval `dircolors "$PWD/.dir_colors"`
#fi
# Autocomplete on open sessions
alias tma='tmux attach -d -t'
# Create a session named after the git directory
alias git-tmux='tmux new -s $(basename $(pwd))'

# Override Paul Irish's HISTIGNORE rule
export HISTIGNORE="ls:pwd:exit:date"

# Disable the default ctrl-s binding, in favor of ctrl-s in vim
# bind -r '\C-s'
stty -ixon

# Random bindings
# Since I've disabled auto updates of google products this comes in handy
alias update_google='/Library/Google/GoogleSoftwareUpdate/GoogleSoftwareUpdate.bundle/Contents/Resources/CheckForUpdatesNow.command'

# Rails, and bundler stuff
alias be="bundle exec"
alias migrate="rake db:migrate db:rollback && rake db:migrate"
alias migrate_no_test="rake db:migrate db:rollback && rake db:migrate"
alias m="migrate"
alias mnt="migrate_no_test"
alias s='rails s'
alias rr='rake routes | grep $@'

# Testing stuff
make_test_pipe () {
  if [ ! -p test-commands ]; then
    mkfifo test-commands
  fi

  while true; do
    sh -c "$(cat test-commands)"
  done
}

# Run some command a thousand times and output stderr things
multi_run_command () {
  i=0
  while (( ++i <= 1000 )); do
    echo -n "$i, "
    if ! output=`$@`; then
      echo "$(date +"%T")"
      echo $"$output"
    fi
  done
}

# Foreman stuff
# don't start web (rails s) with foreman to be able to call binding.pry
alias fnw='foreman start -c all=1,web=0'

# capistrano
alias deploy='SIDEKIQ=false be cap production deploy && say --voice="Bad News" deploy done'
alias deployx='bundle && m && deploy'

# Python and django stuff
#alias pms="python manage.py shell_plus"
#alias pmr="python manage.py runserver_plus 0:8000"
#export WORKON_HOME="$HOME/virtualenvs"
#export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python
#source $HOME/dotfiles/virtualenvwrapper.sh

# Other convenient aliases
# Current project working on
alias cw="cd $HOME/Code/aevy.com/"
alias cv="cw" #easier to write
alias cb="cd $HOME/Code/blog/"
alias cc="cd $HOME/Code/"
alias ee="vim $HOME/.extra"
alias er="source $HOME/.extra"

# Debugging things
# Setup a chrome, for android, remote debugging service (the adb application 
# is in the android sdk plattform tools added to the path underneath)
# ps remember to have the android device connected and usb debugging enabled on it,
# and do adb kill-server if it does not work on first try.
alias remote_debug="adb forward tcp:9222 localabstract:chrome_devtools_remote"
# Open the iOS simulator
alias ios="open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app"

# add some pahts to the path
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/sbin:$PATH
export PATH=/usr/local/share/python:$PATH
export PATH=/usr/local/share/npm/bin:$PATH
export PATH=$PATH:$HOME/Code/aws
# Android sdk (TODO: move it somewhere else)
export PATH=$PATH:$HOME/Downloads/android-sdk/platform-tools
export PATH=/usr/local/mysql/bin:$PATH
# Selenium compatible phantomjs and drivers
export PATH=/usr/local/share/npm/lib/node_modules/webdrvr/node_modules/phantomjs/lib/phantom/bin/phantomjs:$PATH
export PATH=/usr/local/share/npm/bin/webdriver:$PATH
export PATH=/usr/local/share/npm/bin/webdriver:$PATH

# making mysql
# export DYLD_LIBRARY_PATH=/usr/local/mysql/lib/:$DYLD_LIBRARY_PATH

# Cuda paths
export PATH=/Developer/NVIDIA/CUDA-5.0/bin:$PATH
# making cuda
# export DYLD_LIBRARY_PATH=/Developer/NVIDIA/CUDA-5.0/lib:$DYLD_LIBRARY_PATH

# Docker
alias bu="boot2docker up"
alias bd="boot2docker down"
bs () {
  $(boot2docker shellinit)
}

alias dr="docker run --rm -it"
alias dra="docker run --rm -it aevy/aevy"
alias dp="docker ps"
